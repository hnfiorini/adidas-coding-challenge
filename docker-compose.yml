version: '2'
services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - 'rabbitmq_data:/data'
  mysqldb:
    image: mysql:5.7
    container_name: mysqldb
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    networks:
            - spring-cloud-network  
  eureka-server:
        container_name: eureka-server
        build:
            context: eureka-server
            dockerfile: Dockerfile
        image: eureka-server:latest
        ports:
            - "8761:8761"
        networks:
            - spring-cloud-network    
  gateway:
        container_name: gateway
        build:
            context: gateway
            dockerfile: Dockerfile
        image: gateway:latest
        ports:
            - 8080:8080
        networks:
            - spring-cloud-network    
  public-service:
        container_name: public-service
        build:
            context: public-service
            dockerfile: Dockerfile
        image: public-service:latest
        ports:
            - 8001:8001
        links:
          - "eureka-server"    
        networks:
            - spring-cloud-network    
  subscription-service:
        container_name: subscription-service
        build:
            context: subscription-service
            dockerfile: Dockerfile
        image: subscription-service:latest
        env_file: ./.env
        ports:
            - 8002:8002
        links:
          - "eureka-server"
          - "rabbitmq"    
        environment:            
            SPRING_APPLICATION_JSON: '{
              "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
              "spring.datasource.username" : "$MYSQLDB_USER",
              "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
              "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
              "spring.jpa.hibernate.ddl-auto" : "create-drop"
            }'
        depends_on:
            - mysqldb    
        networks:
            - spring-cloud-network    
  email-service:
        container_name: email-service
        build:
            context: email-service
            dockerfile: Dockerfile
        image: email-service:latest
        ports:
            - 8003:8003
        links:
          - "rabbitmq"
        networks:
            - spring-cloud-network
networks:
    spring-cloud-network:
        driver: bridge
volumes:
  rabbitmq_data:
